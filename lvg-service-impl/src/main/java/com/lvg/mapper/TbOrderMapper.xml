<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lvg.mapper.TbOrderMapper" >
  <resultMap id="BaseResultMap" type="com.lvg.pojo.TbOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="cus_id" property="cusId" jdbcType="BIGINT" />
    <result column="item_id" property="itemId" jdbcType="BIGINT" />
    <result column="intime" property="intime" jdbcType="TIMESTAMP" />
    <result column="outtime" property="outtime" jdbcType="TIMESTAMP" />
    <result column="night" property="night" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="INTEGER" />
    <result column="coupons" property="coupons" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="cus_name" property="cusName" jdbcType="VARCHAR" />
    <result column="cus_phone" property="cusPhone" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="host_id" property="hostId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cus_id, item_id, intime, outtime, night, total, discount, coupons, payment, status, 
    cus_name, cus_phone, point, created, updated, host_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lvg.pojo.TbOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lvg.pojo.TbOrderExample" >
    delete from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lvg.pojo.TbOrder" >
    insert into tb_order (id, cus_id, item_id, 
      intime, outtime, night, 
      total, discount, coupons, 
      payment, status, cus_name, 
      cus_phone, point, created, 
      updated, host_id)
    values (#{id,jdbcType=BIGINT}, #{cusId,jdbcType=BIGINT}, #{itemId,jdbcType=BIGINT}, 
      #{intime,jdbcType=TIMESTAMP}, #{outtime,jdbcType=TIMESTAMP}, #{night,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{discount,jdbcType=INTEGER}, #{coupons,jdbcType=INTEGER}, 
      #{payment,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{cusName,jdbcType=VARCHAR}, 
      #{cusPhone,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{hostId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lvg.pojo.TbOrder" >
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cusId != null" >
        cus_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="intime != null" >
        intime,
      </if>
      <if test="outtime != null" >
        outtime,
      </if>
      <if test="night != null" >
        night,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="coupons != null" >
        coupons,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="cusName != null" >
        cus_name,
      </if>
      <if test="cusPhone != null" >
        cus_phone,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="hostId != null" >
        host_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cusId != null" >
        #{cusId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="intime != null" >
        #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="outtime != null" >
        #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="night != null" >
        #{night,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="coupons != null" >
        #{coupons,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="cusName != null" >
        #{cusName,jdbcType=VARCHAR},
      </if>
      <if test="cusPhone != null" >
        #{cusPhone,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="hostId != null" >
        #{hostId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lvg.pojo.TbOrderExample" resultType="java.lang.Integer" >
    select count(*) from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cusId != null" >
        cus_id = #{record.cusId,jdbcType=BIGINT},
      </if>
      <if test="record.itemId != null" >
        item_id = #{record.itemId,jdbcType=BIGINT},
      </if>
      <if test="record.intime != null" >
        intime = #{record.intime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outtime != null" >
        outtime = #{record.outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.night != null" >
        night = #{record.night,jdbcType=INTEGER},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.coupons != null" >
        coupons = #{record.coupons,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.cusName != null" >
        cus_name = #{record.cusName,jdbcType=VARCHAR},
      </if>
      <if test="record.cusPhone != null" >
        cus_phone = #{record.cusPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hostId != null" >
        host_id = #{record.hostId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order
    set id = #{record.id,jdbcType=BIGINT},
      cus_id = #{record.cusId,jdbcType=BIGINT},
      item_id = #{record.itemId,jdbcType=BIGINT},
      intime = #{record.intime,jdbcType=TIMESTAMP},
      outtime = #{record.outtime,jdbcType=TIMESTAMP},
      night = #{record.night,jdbcType=INTEGER},
      total = #{record.total,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=INTEGER},
      coupons = #{record.coupons,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      cus_name = #{record.cusName,jdbcType=VARCHAR},
      cus_phone = #{record.cusPhone,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      host_id = #{record.hostId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lvg.pojo.TbOrder" >
    update tb_order
    <set >
      <if test="cusId != null" >
        cus_id = #{cusId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="intime != null" >
        intime = #{intime,jdbcType=TIMESTAMP},
      </if>
      <if test="outtime != null" >
        outtime = #{outtime,jdbcType=TIMESTAMP},
      </if>
      <if test="night != null" >
        night = #{night,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="coupons != null" >
        coupons = #{coupons,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="cusName != null" >
        cus_name = #{cusName,jdbcType=VARCHAR},
      </if>
      <if test="cusPhone != null" >
        cus_phone = #{cusPhone,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="hostId != null" >
        host_id = #{hostId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lvg.pojo.TbOrder" >
    update tb_order
    set cus_id = #{cusId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=BIGINT},
      intime = #{intime,jdbcType=TIMESTAMP},
      outtime = #{outtime,jdbcType=TIMESTAMP},
      night = #{night,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      discount = #{discount,jdbcType=INTEGER},
      coupons = #{coupons,jdbcType=INTEGER},
      payment = #{payment,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      cus_name = #{cusName,jdbcType=VARCHAR},
      cus_phone = #{cusPhone,jdbcType=VARCHAR},
      point = #{point,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      host_id = #{hostId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>